name: Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  audit:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Install gocover-cobertura
        run: |
          go get github.com/boumenot/gocover-cobertura && go install github.com/boumenot/gocover-cobertura

      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          version: v2.0.0
          org: GoTestTools
          repo: gotestfmt

      - name: Config file
        run: cp resource/example.config.yaml resource/config.yaml

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./...

      - name: Run tests
        run: go test -race -vet=off -coverprofile=coverage.txt ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Convert go coverage to corbetura format
        run: gocover-cobertura < coverage.txt > coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage.xml

      - name: Generate code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: false
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md